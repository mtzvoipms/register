- content_for(:title, %("#{params[:q]}")) if params[:q].present?

.content.search-content
  .container-fluid

    .row
      .col-lg-12
        %h1= t('.headline')
        - if params[:q].blank?
          %p.legal-entity-count= t('.legal-entity_count', count: number_to_human(@legal_entity_count, precision: 2).downcase)
      .col-lg-6.offset-lg-3
        .form-group
          = form_with url: search_path, method: 'get', class: 'search-form', local: true do |f|
            = f.text_field :q, value: params[:q], class: 'form-control form-control-lg search-field', placeholder: t('.placeholder'), autofocus: true
            = f.submit t('.search'), name: nil, class: 'search-button'

    .row
      - if params[:q].blank?
        .col-lg-6.offset-lg-3
          .oo-intro
            %p= t('.blurb_html', bo_link: link_to(t('.bo_link_text'), glossary_path), more_info_link: link_to(t('.more_info_link_text'), faq_path))

            %hr

            .data-sources-info
              %p= t('.data_sources_preface', count: number_with_delimiter(@legal_entity_count))
              %ul.list-unstyled
                - @data_sources.each do |id, data_source|
                  %li= link_to(data_source[:name], data_source_path(id))

            %hr

            %p
              = link_to 'Download our data', download_path, class: 'btn btn-primary'

            %hr

      - elsif @response.empty?
        .col-lg-6.offset-lg-3
          .no-results
            %p= t('.no_results')
      - else
        .col-lg-7.offset-lg-1
          .frame
            .frame-wrap
              %p.search-results-header
                - if @fallback
                  %em= t('.fallback', query: params[:q])
                  %br
                = page_entries_info @response, entry_name: 'result'
              .options

              %ul.list-unstyled.list-entities
                - @response.each do |record|
                  %li.item
                    = render 'shared/entity_title', entity: record, with_company: true
                    - if record.natural_person?
                      .result-controls
                        = render partial: 'shared/entity_controlled_companies', locals: { entity: record }
                    - if record.merged_entities_count&.positive?
                      .result-merged-people
                        = t('.merged_people', count: record.merged_entities_count)
              = paginate @response

      .col-lg-3
        - unless params[:q].blank? || @response.empty?
          = render partial: 'filter', locals: { key: 'type', helper: method(:search_filter_type) }
